/* Generated By:JavaCC: Do not edit this line. LanguageParserConstants.java */
package classes;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LanguageParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DO = 14;
  /** RegularExpression Id. */
  int MAKE = 15;
  /** RegularExpression Id. */
  int END = 16;
  /** RegularExpression Id. */
  int CONST = 17;
  /** RegularExpression Id. */
  int VAR = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int REAL = 20;
  /** RegularExpression Id. */
  int CHAR = 21;
  /** RegularExpression Id. */
  int BOOL = 22;
  /** RegularExpression Id. */
  int GET = 23;
  /** RegularExpression Id. */
  int PUT = 24;
  /** RegularExpression Id. */
  int IF = 25;
  /** RegularExpression Id. */
  int THEN = 26;
  /** RegularExpression Id. */
  int ELSE = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int WHILE = 30;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 31;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 32;
  /** RegularExpression Id. */
  int PONTO = 33;
  /** RegularExpression Id. */
  int VIRGULA = 34;
  /** RegularExpression Id. */
  int DOISPONTOS = 35;
  /** RegularExpression Id. */
  int ATRIBUICAO = 36;
  /** RegularExpression Id. */
  int PONTOVIRGULA = 37;
  /** RegularExpression Id. */
  int ADICAO = 38;
  /** RegularExpression Id. */
  int SUBTRACAO = 39;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 40;
  /** RegularExpression Id. */
  int DIVISAO = 41;
  /** RegularExpression Id. */
  int POTENCIA = 42;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA = 43;
  /** RegularExpression Id. */
  int RESTO = 44;
  /** RegularExpression Id. */
  int IGUAL = 45;
  /** RegularExpression Id. */
  int DIFERENTE = 46;
  /** RegularExpression Id. */
  int MENOR = 47;
  /** RegularExpression Id. */
  int MAIOR = 48;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 49;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 50;
  /** RegularExpression Id. */
  int E = 51;
  /** RegularExpression Id. */
  int OU = 52;
  /** RegularExpression Id. */
  int NAO = 53;
  /** RegularExpression Id. */
  int DIGITO = 54;
  /** RegularExpression Id. */
  int CONSTANTE_INTEIRA = 55;
  /** RegularExpression Id. */
  int CONSTANTE_REAL = 56;
  /** RegularExpression Id. */
  int CONSTANTE_LITERAL = 57;
  /** RegularExpression Id. */
  int LETRA = 58;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 59;
  /** RegularExpression Id. */
  int SIMBOLO_INVALIDO = 60;
  /** RegularExpression Id. */
  int CONSTANTE_INTEIRA_INVALIDA = 61;
  /** RegularExpression Id. */
  int CONSTANTE_REAL_INVALIDA = 62;
  /** RegularExpression Id. */
  int CONSTANTE_LITERAL_INVALIDA = 63;
  /** RegularExpression Id. */
  int IDENTIFICADOR_INVALIDO = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_LINHA = 1;
  /** Lexical state. */
  int COMENTARIO_BLOCO = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"\\r\\n\"",
    "\"\\n\\r\"",
    "\"//\"",
    "<token of kind 9>",
    "<token of kind 10>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 13>",
    "\"do\"",
    "\"make\"",
    "\"end\"",
    "\"const\"",
    "\"var\"",
    "\"int\"",
    "\"real\"",
    "\"char\"",
    "\"bool\"",
    "\"get\"",
    "\"put\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"while\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\",\"",
    "\":\"",
    "\"->\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"=\"",
    "\"<>\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "<DIGITO>",
    "<CONSTANTE_INTEIRA>",
    "<CONSTANTE_REAL>",
    "<CONSTANTE_LITERAL>",
    "<LETRA>",
    "<IDENTIFICADOR>",
    "<SIMBOLO_INVALIDO>",
    "<CONSTANTE_INTEIRA_INVALIDA>",
    "<CONSTANTE_REAL_INVALIDA>",
    "<CONSTANTE_LITERAL_INVALIDA>",
    "<IDENTIFICADOR_INVALIDO>",
  };

}
